package lexicalAnalysis;

import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
//Jahanzeb Bakhtiyar
public class DeclarationStatementChecker {

	public static void main(String[] args){
		
		Scanner scan = new Scanner(System.in);
		
		System.out.print("Enter Instruction: ");
		String instruction = scan.nextLine();
		
		Pattern pattern = Pattern.compile("((([int|char|String|boolean|short|long|double]*) [a-zA-Z_][a-zA-Z0-9_]* = )(.*)?;)");
		Matcher match = pattern.matcher(instruction);
		
		String type = "", solution = "";
		if(match.find()){
			System.out.println("\n["+match.group()+"], ["+match.group(2)+"],["+match.group(3)+"],["+match.group(4)+"]");
			type = match.group(3);
			solution = match.group(4);
			System.out.println("\nChecking for errors...\n");
			
			if(type.equals("String")){
				if(solution.startsWith("\"") && solution.endsWith("\""))
					System.out.println("Pass...");
				else
					System.out.println("Fail... String value should be in double quotes.");
			}else if(type.equals("char")){
				if(solution.startsWith("\'") && solution.endsWith("\'") && solution.length() == 3)
					System.out.println("Pass...");
				else
					System.out.println("Fail... Character value should be in single quotes with length 1");			
			}else if(type.equals("boolean")){
				if(solution.equals("true") || solution.equals("false"))
					System.out.println("Pass...");
				else
					System.out.println("Fail... boolean value should be true or false.");
			}else if(type.equals("int") || type.equals("short") || type.equals("long")){
				try{
					Long.parseLong(solution);
					System.out.println("Pass..");
				}catch(Exception e){
					System.out.println("Fail... Value is not right.");
				}
			}else{
				try{
					Double.parseDouble(solution);
					System.out.println("Pass..");
				}catch(Exception e){
					System.out.println("Fail... Value is not right.");
				}
			}
		}else
			System.out.println("Statement Syntax is wrong.");
		
		scan.close();
		
	}
	
}
